package hello.controller;

import hello.WxInterface.WxPayInterface;
import hello.WxInterface.GetAccessToken;
import hello.WxInterface.GetQRCode;
import hello.WxInterface.GetUserInfo;
import hello.service.UserService;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a controller
@RequestMapping // This means URL's start with /demo (after Application path)
public class UserController {
    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data

    private final UserService userService;

    private final GetAccessToken getAccessToken;

    private final GetUserInfo getUserInfo;

    private final GetQRCode getQRCode;

    private final WxPayInterface wxPayInterface;

    @Autowired
    public UserController(UserService userService, GetAccessToken getAccessToken, GetUserInfo getUserInfo, GetQRCode getQRCode, WxPayInterface wxPayInterface) {
        this.userService = userService;
        this.getAccessToken = getAccessToken;
        this.getUserInfo = getUserInfo;
        this.getQRCode = getQRCode;
        this.wxPayInterface = wxPayInterface;
    }

    @GetMapping(path = "/getAccessToken")
    public @ResponseBody
    String getAccessToken() {
        // This returns a JSON or XML with the users
        return getAccessToken.getAccessToken();
    }

    @ResponseBody
    @PostMapping (path = "/getQRCode")
    public String getQRCode(String scene) {
        getQRCode.change(scene);
        return "Already get";
    }

    @ResponseBody
    @PostMapping(value = "/decodeUserInfo")
    public JSONObject decodeUserInfo(String encryptedData, String iv, String code) {
        return userService.addNewUser(encryptedData,iv,code);
    }

    @ResponseBody
    @PostMapping(value = "/getOpenIdByCode")
    public JSONObject getOpenIdByCode(String code) {
        return getUserInfo.getOpenIdByCode(code);
    }

    @ResponseBody
    @PostMapping(value = "/insertUser")
    public String insertUser(String nickName,String openId,Long times,  String avatarUrl,Double money) {
        userService.addNewUser(nickName,openId,times,avatarUrl,money);
        return "saved";
    }

    @ResponseBody
    @PostMapping(value = "/updateTimes")
    public String updateTimes(String openId) {
        userService.updateTimes(openId);
        return "updated";
    }

    @ResponseBody
    @GetMapping(value = "/getReceiverInfo")
    public JSONObject getReceiverInfo(String openId){
        return JSONObject.fromObject(userService.getReceiverInfo(openId));
    }

    @ResponseBody
    @PostMapping(value = "/wxWithdraw")
    public JSONObject wxWithdraw(String openId, String money){
        return JSONObject.fromObject(wxPayInterface.wxWithdraw(openId,money));
    }

    @ResponseBody
    @GetMapping(value = "/getBunchReceiverInfo")
    public JSONArray getBunchReceiverInfo(String openId){
        return userService.getBunchReceiverInfo(openId);
    }

}
